{"ast":null,"code":"var _jsxFileName = \"/home/qiu/code/Github-hotspot/github-viz-app/src/contexts/ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\n\n// 创建主题上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// 主题提供者组件\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // 从localStorage读取主题设置，如果没有则使用light\n  const [theme, setTheme] = useState(() => {\n    const savedTheme = localStorage.getItem('github-viz-theme');\n    return savedTheme || 'light';\n  });\n\n  // 切换主题函数\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  // 主题变化时更新body类名和localStorage\n  useEffect(() => {\n    const body = document.body;\n    body.classList.remove('light-theme', 'dark-theme');\n    body.classList.add(`${theme}-theme`);\n    localStorage.setItem('github-viz-theme', theme);\n  }, [theme]);\n\n  // 提供主题上下文值\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n// 自定义hook以使用主题上下文\n_s(ThemeProvider, \"ldnSCbR/4+5ayiH6jDK9f1WWpug=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","savedTheme","localStorage","getItem","toggleTheme","prevTheme","body","document","classList","remove","add","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["/home/qiu/code/Github-hotspot/github-viz-app/src/contexts/ThemeContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\n\n// 创建主题上下文\nconst ThemeContext = createContext();\n\n// 主题提供者组件\nexport const ThemeProvider = ({ children }) => {\n    // 从localStorage读取主题设置，如果没有则使用light\n    const [theme, setTheme] = useState(() => {\n        const savedTheme = localStorage.getItem('github-viz-theme');\n        return savedTheme || 'light';\n    });\n\n    // 切换主题函数\n    const toggleTheme = () => {\n        setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n    };\n\n    // 主题变化时更新body类名和localStorage\n    useEffect(() => {\n        const body = document.body;\n        body.classList.remove('light-theme', 'dark-theme');\n        body.classList.add(`${theme}-theme`);\n        localStorage.setItem('github-viz-theme', theme);\n    }, [theme]);\n\n    // 提供主题上下文值\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\n// 自定义hook以使用主题上下文\nexport const useTheme = () => {\n    const context = useContext(ThemeContext);\n    if (!context) {\n        throw new Error('useTheme must be used within a ThemeProvider');\n    }\n    return context;\n};\n\nexport default ThemeProvider; "],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACrC,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IAC3D,OAAOF,UAAU,IAAI,OAAO;EAChC,CAAC,CAAC;;EAEF;EACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACtBJ,QAAQ,CAACK,SAAS,IAAIA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EACnE,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACZ,MAAMc,IAAI,GAAGC,QAAQ,CAACD,IAAI;IAC1BA,IAAI,CAACE,SAAS,CAACC,MAAM,CAAC,aAAa,EAAE,YAAY,CAAC;IAClDH,IAAI,CAACE,SAAS,CAACE,GAAG,CAAC,GAAGX,KAAK,QAAQ,CAAC;IACpCG,YAAY,CAACS,OAAO,CAAC,kBAAkB,EAAEZ,KAAK,CAAC;EACnD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,oBACIL,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK;MAAEK;IAAY,CAAE;IAAAP,QAAA,EAChDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;;AAED;AAAAnB,EAAA,CA5BaF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA6B1B,OAAO,MAAMuB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC1B,MAAMC,OAAO,GAAG/B,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAAC0B,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACnE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAQrB,eAAevB,aAAa;AAAC,IAAAsB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}