{"ast":null,"code":"var _jsxFileName = \"/home/qiu/code/Github-hotspot/github-viz-app/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { motion, useInView } from 'framer-motion';\nimport API from '../config/api';\n\n// Ê†πÊçÆËØ≠Ë®ÄÂêçÁß∞ÁîüÊàêÈ¢úËâ≤\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLanguageColor = language => {\n  const colorMap = {\n    JavaScript: '#f1e05a',\n    TypeScript: '#2b7489',\n    Python: '#3572A5',\n    Java: '#b07219',\n    Go: '#00ADD8',\n    'C++': '#f34b7d',\n    Ruby: '#701516',\n    PHP: '#4F5D95',\n    Rust: '#dea584',\n    'C#': '#178600',\n    Swift: '#ffac45',\n    Kotlin: '#F18E33',\n    'C': '#555555',\n    'Shell': '#89e051',\n    'HTML': '#e34c26',\n    'CSS': '#563d7c'\n  };\n  if (colorMap[language]) {\n    return colorMap[language];\n  }\n  const hue = Math.abs(language.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0)) % 360;\n  return `hsl(${hue}, 65%, 65%)`;\n};\n\n// Êñ∞Â¢ûÔºöÂä®ÁîªÂàóË°®È°πÁªÑ‰ª∂\nconst AnimatedLanguageItem = ({\n  language,\n  count,\n  percentage,\n  barWidth,\n  color,\n  index,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n  isSelected,\n  hoveredLanguage,\n  topRepos\n}) => {\n  _s();\n  const ref = useRef(null);\n  const inView = useInView(ref, {\n    amount: 0.5,\n    triggerOnce: false\n  });\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: ref,\n    \"data-index\": index,\n    onMouseEnter: () => onMouseEnter(),\n    onMouseLeave: () => onMouseLeave(),\n    onClick: onClick,\n    initial: {\n      scale: 0.7,\n      opacity: 0\n    },\n    animate: inView ? {\n      scale: 1,\n      opacity: 1\n    } : {\n      scale: 0.7,\n      opacity: 0\n    },\n    transition: {\n      duration: 0.1,\n      delay: index * 0.01\n    },\n    className: `language-bar-item ${isSelected ? 'selected' : ''}`,\n    style: {\n      position: 'relative'\n    },\n    hoveredLanguage: hoveredLanguage,\n    topRepos: topRepos,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-name\",\n      children: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-fill\",\n        style: {\n          width: barWidth,\n          height: '20px',\n          display: 'block',\n          opacity: 0.8,\n          backgroundColor: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-count\",\n      children: [count.toLocaleString(), \" (\", percentage, \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n/*const AnimatedLanguageItem = ({ language, count, percentage, barWidth, color, index, onMouseEnter, onMouseLeave, onClick, isSelected, hoveredLanguage, topRepos }) => {\n    const ref = useRef(null);\n    const inView = useInView(ref, { amount: 0.5, triggerOnce: false });\n\n    return (\n        <motion.div\n            ref={ref}\n            data-index={index}\n            onMouseEnter={() => onMouseEnter()}\n            onMouseLeave={() => onMouseLeave()}\n            onClick={onClick}\n            initial={{ scale: 0.7, opacity: 0 }}\n            animate={inView ? { scale: 1, opacity: 1 } : { scale: 0.7, opacity: 0 }}\n            transition={{ duration: 0.1, delay: index * 0.01 }}\n            className={`language-bar-item ${isSelected ? 'selected' : ''}`}\n            style={{ position: 'relative' }}\n            hoveredLanguage={hoveredLanguage}\n            topRepos={topRepos}\n        >\n            <div className=\"language-name\">{language}</div>\n            <div className=\"bar-container\">\n                <div\n                    className=\"bar-fill\"\n                    style={{\n                        width: barWidth,\n                        height: '20px',\n                        display: 'block',\n                        opacity: 0.8,\n                        backgroundColor: color,\n                    }}\n                />\n            </div>\n            <div className=\"language-count\">\n                {count.toLocaleString()} ({percentage}%)\n            </div>\n            {hoveredLanguage === language && topRepos[language] && (\n                <div className=\"language-top-repos\">\n                    <h4>{language} ÁÉ≠Èó®‰ªìÂ∫ì</h4>\n                    <ul>\n                        {topRepos[language].map((repo, i) => (\n                            <li key={i}>\n                                <div className=\"repo-name\">{repo.repo_name}</div>\n                                <div className=\"repo-stats\">\n                                    <span>‚≠ê {repo.stars.toLocaleString()}</span>\n                                    <span>üî± {repo.forks.toLocaleString()}</span>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </motion.div>\n    );\n};*/\n\n// Helper function to format numbers (can be reused or imported)\n_s(AnimatedLanguageItem, \"O7qYEn3iCrBBWRAefWku+E/MdDM=\", false, function () {\n  return [useInView];\n});\n_c = AnimatedLanguageItem;\nconst formatNumber = num => {\n  if (!num) return '0';\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1) + 'M';\n  } else if (num >= 1000) {\n    return (num / 1000).toFixed(1) + 'K';\n  }\n  return num.toLocaleString(); // Use toLocaleString for full numbers\n};\n\n// Helper function to calculate growth rate (matching TopRepositories.jsx)\nconst calculateGrowthRate = repo => {\n  if (repo.stars_month_ago === null || repo.stars_month_ago === undefined || repo.stars_month_ago === 0) return 0;\n  const growth = (repo.stars || 0) - repo.stars_month_ago;\n  const baseStars = repo.stars_month_ago || 1;\n  const rate = growth / baseStars * 100;\n  // Handle potential Infinity or NaN if needed, though baseStars || 1 helps\n  return isFinite(rate) ? rate.toFixed(1) : 'N/A';\n};\nconst Dashboard = () => {\n  _s2();\n  // Initialize stats with 0 or null\n  const [stats, setStats] = useState({\n    totalRepositories: 0,\n    totalStars: 0,\n    totalContributors: 0\n  });\n  const [languageData, setLanguageData] = useState([]);\n  const [topReposByLang, setTopReposByLang] = useState({}); // Renamed for clarity\n  const [dashboardTopRepos, setDashboardTopRepos] = useState([]); // State for top growing repos\n  const [hoveredLanguage, setHoveredLanguage] = useState(null);\n  const [loadingStats, setLoadingStats] = useState(true); // Keep loading state for stats\n  const [loadingLanguages, setLoadingLanguages] = useState(true);\n  const [loadingTopRepos, setLoadingTopRepos] = useState(true); // Loading state for top repos section\n  const [error, setError] = useState(null); // Use a single error state or separate if needed\n  const [selectedLanguageIndex, setSelectedLanguageIndex] = useState(-1);\n  useEffect(() => {\n    // Fetch data for Stats Overview\n    const fetchStatsData = async () => {\n      setLoadingStats(true);\n      try {\n        const statsResponse = await fetch(API.starsContributors); // Fetch data used for stats\n        if (!statsResponse.ok) {\n          throw new Error(`Ëé∑ÂèñÁªüËÆ°Êï∞ÊçÆÂ§±Ë¥•: ${statsResponse.status}`);\n        }\n        const statsResult = await statsResponse.json();\n\n        // Calculate stats from the fetched data\n        const totalRepositories = statsResult.length; // Use length as repo count for dashboard\n        const totalStars = statsResult.reduce((sum, repo) => sum + (repo.stars || 0), 0);\n        const totalContributors = statsResult.reduce((sum, repo) => sum + (repo.contributors_count || 0), 0);\n        setStats({\n          totalRepositories,\n          totalStars,\n          totalContributors\n        });\n      } catch (err) {\n        console.error(\"Ëé∑Âèñ‰ª™Ë°®ÁõòÁªüËÆ°Êï∞ÊçÆÂ§±Ë¥•:\", err);\n        setError(prev => prev ? `${prev}\\nÁªüËÆ°Êï∞ÊçÆÂä†ËΩΩÂ§±Ë¥•` : 'ÁªüËÆ°Êï∞ÊçÆÂä†ËΩΩÂ§±Ë¥•'); // Append or set error\n        // Optionally set stats to fallback values or keep them 0\n        setStats({\n          totalRepositories: 0,\n          totalStars: 0,\n          totalContributors: 0\n        });\n      } finally {\n        setLoadingStats(false);\n      }\n    };\n\n    // Fetch data for Language Distribution and Top Repos per Language\n    const fetchLanguageData = async () => {\n      setLoadingLanguages(true);\n      try {\n        const langResponse = await fetch(API.languageDistribution);\n        if (!langResponse.ok) {\n          throw new Error(`Ëé∑ÂèñËØ≠Ë®ÄÊï∞ÊçÆÂ§±Ë¥•: ${langResponse.status}`);\n        }\n        const langResult = await langResponse.json();\n        setLanguageData(langResult);\n\n        // Fetch top repos for top languages (keep this logic)\n        const languageTopRepos = {};\n        const topLanguages = langResult.slice(0, 15); // Fetch for top 15 displayed languages\n        // Use Promise.all for potentially faster fetching if backend/network allows\n        await Promise.all(topLanguages.map(async lang => {\n          try {\n            const reposResponse = await fetch(`${API.languageTopRepos}?language=${encodeURIComponent(lang.language)}`);\n            if (reposResponse.ok) {\n              const reposData = await reposResponse.json();\n              languageTopRepos[lang.language] = reposData;\n            } else {\n              console.warn(`Ëé∑Âèñ ${lang.language} ÁÉ≠Èó®‰ªìÂ∫ìÂ§±Ë¥•: ${reposResponse.status}`);\n            }\n          } catch (repoError) {\n            console.warn(`Ëé∑Âèñ ${lang.language} ÁÉ≠Èó®‰ªìÂ∫ìÂ§±Ë¥•:`, repoError);\n          }\n        }));\n        setTopReposByLang(languageTopRepos);\n      } catch (err) {\n        console.error(\"Ëé∑Âèñ‰ª™Ë°®ÁõòËØ≠Ë®ÄÊï∞ÊçÆÂ§±Ë¥•:\", err);\n        setError(prev => prev ? `${prev}\\nËØ≠Ë®ÄÊï∞ÊçÆÂä†ËΩΩÂ§±Ë¥•` : 'ËØ≠Ë®ÄÊï∞ÊçÆÂä†ËΩΩÂ§±Ë¥•'); // Append or set error\n        setLanguageData([]); // Set to empty on error\n        setTopReposByLang({});\n      } finally {\n        setLoadingLanguages(false);\n      }\n    };\n\n    // Fetch data for Top Growing Repositories\n    const fetchTopGrowingRepos = async () => {\n      setLoadingTopRepos(true);\n      try {\n        const response = await fetch(API.topRepositories); // Fetch all top repos\n        if (!response.ok) {\n          throw new Error(`Ëé∑ÂèñTop‰ªìÂ∫ìÊï∞ÊçÆÂ§±Ë¥•: ${response.status}`);\n        }\n        let repos = await response.json();\n\n        // Calculate growth rate for each and sort\n        repos.forEach(repo => {\n          repo.growthRate = parseFloat(calculateGrowthRate(repo)) || 0; // Add growthRate property\n        });\n        repos.sort((a, b) => b.growthRate - a.growthRate); // Sort by growth rate descending\n\n        setDashboardTopRepos(repos.slice(0, 10)); // Get top 10\n      } catch (err) {\n        console.error(\"Ëé∑Âèñ‰ª™Ë°®ÁõòÁÉ≠Èó®Â¢ûÈïø‰ªìÂ∫ìÂ§±Ë¥•:\", err);\n        setError(prev => prev ? `${prev}\\nÁÉ≠Èó®Â¢ûÈïø‰ªìÂ∫ìÂä†ËΩΩÂ§±Ë¥•` : 'ÁÉ≠Èó®Â¢ûÈïø‰ªìÂ∫ìÂä†ËΩΩÂ§±Ë¥•');\n        setDashboardTopRepos([]); // Set empty on error\n      } finally {\n        setLoadingTopRepos(false);\n      }\n    };\n\n    // Call all fetch functions\n    fetchStatsData();\n    fetchLanguageData();\n    fetchTopGrowingRepos(); // Fetch top growing repos\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  const totalCount = languageData.reduce((sum, item) => sum + item.count, 0);\n  const maxCount = Math.max(...languageData.map(item => item.count));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"\\u6570\\u636E\\u6982\\u89C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: loadingStats ? '...' : stats.totalRepositories.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"\\u4ED3\\u5E93\\u603B\\u6570\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: loadingStats ? '...' : stats.totalStars.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"\\u603B\\u661F\\u6807\\u6570\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: loadingStats ? '...' : stats.totalContributors.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"\\u8D21\\u732E\\u8005\\u603B\\u6570\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"\\u9519\\u8BEF: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card language-distribution-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"\\u7F16\\u7A0B\\u8BED\\u8A00\\u5206\\u5E03\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: loadingLanguages ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u8BED\\u8A00\\u6570\\u636E...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this) : !languageData || languageData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-data\",\n            children: \"\\u6CA1\\u6709\\u627E\\u5230\\u8BED\\u8A00\\u5206\\u5E03\\u6570\\u636E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-list-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scroll-list\",\n              children: languageData.slice(0, 15).map((item, index) => {\n                const percentage = totalCount > 0 ? (item.count / totalCount * 100).toFixed(1) : 0;\n                const barWidth = maxCount > 0 ? (item.count / maxCount * 100).toFixed(1) + '%' : '0%';\n                return /*#__PURE__*/_jsxDEV(AnimatedLanguageItem, {\n                  index: index,\n                  language: item.language,\n                  count: item.count,\n                  percentage: percentage,\n                  barWidth: barWidth,\n                  color: getLanguageColor(item.language),\n                  isSelected: selectedLanguageIndex === index,\n                  hoveredLanguage: hoveredLanguage,\n                  topRepos: topReposByLang,\n                  onMouseEnter: () => {\n                    setHoveredLanguage(item.language);\n                    setSelectedLanguageIndex(index);\n                  },\n                  onMouseLeave: () => setHoveredLanguage(null),\n                  onClick: () => {\n                    setHoveredLanguage(item.language);\n                    setSelectedLanguageIndex(index);\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card top-repositories-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"\\u70ED\\u95E8\\u589E\\u957F\\u4ED3\\u5E93 (Top 10)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: loadingTopRepos ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u70ED\\u95E8\\u4ED3\\u5E93...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this) : !dashboardTopRepos || dashboardTopRepos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-data\",\n            children: \"\\u65E0\\u6CD5\\u52A0\\u8F7D\\u70ED\\u95E8\\u4ED3\\u5E93\\u6570\\u636E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-list-container\",\n            style: {\n              maxHeight: '400px',\n              overflowY: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"repo-list-dynamic\",\n              children: dashboardTopRepos.map((repo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"repository-card dashboard-repo-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"repository-rank\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"repository-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"repository-name\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: repo.url || '#',\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"repository-owner\",\n                        children: [repo.owner, \"/\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 57\n                      }, this), repo.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"repository-description\",\n                  children: repo.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"repository-meta\",\n                  children: [repo.language && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"repository-language\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"language-color\",\n                      style: {\n                        backgroundColor: getLanguageColor(repo.language)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"language-name\",\n                      children: repo.language\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"repository-stats\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"repository-stars\",\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"icon\",\n                        viewBox: \"0 0 16 16\",\n                        fill: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 368,\n                          columnNumber: 119\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        title: `${(repo.stars || 0).toLocaleString()} ‰∏™ÊòüÊ†á`,\n                        children: formatNumber(repo.stars)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"repository-forks\",\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"icon\",\n                        viewBox: \"0 0 16 16\",\n                        fill: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 372,\n                          columnNumber: 119\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        title: `${(repo.forks || 0).toLocaleString()} ‰∏™ÂàÜÂèâ`,\n                        children: formatNumber(repo.forks)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 53\n                    }, this), repo.stars_month_ago !== null && repo.stars_month_ago !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `repository-growth ${repo.growthRate >= 0 ? 'positive' : 'negative'}`,\n                      title: `ËøáÂéª7Â§©ÊòüÊ†áÂ¢ûÈïø ${repo.growthRate}%`,\n                      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                        className: \"icon\",\n                        viewBox: \"0 0 16 16\",\n                        fill: \"currentColor\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          fillRule: \"evenodd\",\n                          d: \"M8 12a.75.75 0 01-.75-.75V5.66L3.668 9.123a.75.75 0 11-1.036-1.086l5.25-5a.75.75 0 011.071 0l5.25 5a.75.75 0 11-1.036 1.086L8.75 5.66v5.59A.75.75 0 018 12z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 380,\n                          columnNumber: 123\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 380,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [repo.growthRate, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 381,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 45\n                }, this)]\n              }, repo.repo_id || index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, this);\n};\n_s2(Dashboard, \"OSPk9cKl2Cehrh0QYHjORQdV14o=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnimatedLanguageItem\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useRef","motion","useInView","API","jsxDEV","_jsxDEV","getLanguageColor","language","colorMap","JavaScript","TypeScript","Python","Java","Go","Ruby","PHP","Rust","Swift","Kotlin","hue","Math","abs","split","reduce","acc","char","charCodeAt","AnimatedLanguageItem","count","percentage","barWidth","color","index","onMouseEnter","onMouseLeave","onClick","isSelected","hoveredLanguage","topRepos","_s","ref","inView","amount","triggerOnce","div","initial","scale","opacity","animate","transition","duration","delay","className","style","position","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","display","backgroundColor","toLocaleString","_c","formatNumber","num","toFixed","calculateGrowthRate","repo","stars_month_ago","undefined","growth","stars","baseStars","rate","isFinite","Dashboard","_s2","stats","setStats","totalRepositories","totalStars","totalContributors","languageData","setLanguageData","topReposByLang","setTopReposByLang","dashboardTopRepos","setDashboardTopRepos","setHoveredLanguage","loadingStats","setLoadingStats","loadingLanguages","setLoadingLanguages","loadingTopRepos","setLoadingTopRepos","error","setError","selectedLanguageIndex","setSelectedLanguageIndex","fetchStatsData","statsResponse","fetch","starsContributors","ok","Error","status","statsResult","json","length","sum","contributors_count","err","console","prev","fetchLanguageData","langResponse","languageDistribution","langResult","languageTopRepos","topLanguages","slice","Promise","all","map","lang","reposResponse","encodeURIComponent","reposData","warn","repoError","fetchTopGrowingRepos","response","topRepositories","repos","forEach","growthRate","parseFloat","sort","a","b","totalCount","item","maxCount","max","maxHeight","overflowY","href","url","target","rel","owner","name","description","viewBox","fill","d","title","forks","fillRule","repo_id","_c2","$RefreshReg$"],"sources":["/home/qiu/code/Github-hotspot/github-viz-app/src/pages/Dashboard.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { motion, useInView } from 'framer-motion';\nimport API from '../config/api';\n\n// Ê†πÊçÆËØ≠Ë®ÄÂêçÁß∞ÁîüÊàêÈ¢úËâ≤\nconst getLanguageColor = (language) => {\n    const colorMap = {\n        JavaScript: '#f1e05a',\n        TypeScript: '#2b7489',\n        Python: '#3572A5',\n        Java: '#b07219',\n        Go: '#00ADD8',\n        'C++': '#f34b7d',\n        Ruby: '#701516',\n        PHP: '#4F5D95',\n        Rust: '#dea584',\n        'C#': '#178600',\n        Swift: '#ffac45',\n        Kotlin: '#F18E33',\n        'C': '#555555',\n        'Shell': '#89e051',\n        'HTML': '#e34c26',\n        'CSS': '#563d7c',\n    };\n    if (colorMap[language]) {\n        return colorMap[language];\n    }\n    const hue = Math.abs(language.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0)) % 360;\n    return `hsl(${hue}, 65%, 65%)`;\n};\n\n// Êñ∞Â¢ûÔºöÂä®ÁîªÂàóË°®È°πÁªÑ‰ª∂\nconst AnimatedLanguageItem = ({ language, count, percentage, barWidth, color, index, onMouseEnter, onMouseLeave, onClick, isSelected, hoveredLanguage, topRepos }) => {\n    const ref = useRef(null);\n    const inView = useInView(ref, { amount: 0.5, triggerOnce: false });\n\n    return (\n        <motion.div\n            ref={ref}\n            data-index={index}\n            onMouseEnter={() => onMouseEnter()}\n            onMouseLeave={() => onMouseLeave()}\n            onClick={onClick}\n            initial={{ scale: 0.7, opacity: 0 }}\n            animate={inView ? { scale: 1, opacity: 1 } : { scale: 0.7, opacity: 0 }}\n            transition={{ duration: 0.1, delay: index * 0.01 }}\n            className={`language-bar-item ${isSelected ? 'selected' : ''}`}\n            style={{ position: 'relative' }}\n            hoveredLanguage={hoveredLanguage}\n            topRepos={topRepos}\n        >\n            <div className=\"language-name\">{language}</div>\n            <div className=\"bar-container\">\n                <div\n                    className=\"bar-fill\"\n                    style={{\n                        width: barWidth,\n                        height: '20px',\n                        display: 'block',\n                        opacity: 0.8,\n                        backgroundColor: color,\n                    }}\n                />\n            </div>\n            <div className=\"language-count\">\n                {count.toLocaleString()} ({percentage}%)\n            </div>\n        </motion.div>\n    );\n};\n\n/*const AnimatedLanguageItem = ({ language, count, percentage, barWidth, color, index, onMouseEnter, onMouseLeave, onClick, isSelected, hoveredLanguage, topRepos }) => {\n    const ref = useRef(null);\n    const inView = useInView(ref, { amount: 0.5, triggerOnce: false });\n\n    return (\n        <motion.div\n            ref={ref}\n            data-index={index}\n            onMouseEnter={() => onMouseEnter()}\n            onMouseLeave={() => onMouseLeave()}\n            onClick={onClick}\n            initial={{ scale: 0.7, opacity: 0 }}\n            animate={inView ? { scale: 1, opacity: 1 } : { scale: 0.7, opacity: 0 }}\n            transition={{ duration: 0.1, delay: index * 0.01 }}\n            className={`language-bar-item ${isSelected ? 'selected' : ''}`}\n            style={{ position: 'relative' }}\n            hoveredLanguage={hoveredLanguage}\n            topRepos={topRepos}\n        >\n            <div className=\"language-name\">{language}</div>\n            <div className=\"bar-container\">\n                <div\n                    className=\"bar-fill\"\n                    style={{\n                        width: barWidth,\n                        height: '20px',\n                        display: 'block',\n                        opacity: 0.8,\n                        backgroundColor: color,\n                    }}\n                />\n            </div>\n            <div className=\"language-count\">\n                {count.toLocaleString()} ({percentage}%)\n            </div>\n            {hoveredLanguage === language && topRepos[language] && (\n                <div className=\"language-top-repos\">\n                    <h4>{language} ÁÉ≠Èó®‰ªìÂ∫ì</h4>\n                    <ul>\n                        {topRepos[language].map((repo, i) => (\n                            <li key={i}>\n                                <div className=\"repo-name\">{repo.repo_name}</div>\n                                <div className=\"repo-stats\">\n                                    <span>‚≠ê {repo.stars.toLocaleString()}</span>\n                                    <span>üî± {repo.forks.toLocaleString()}</span>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </motion.div>\n    );\n};*/\n\n// Helper function to format numbers (can be reused or imported)\nconst formatNumber = (num) => {\n    if (!num) return '0';\n    if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M';\n    } else if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toLocaleString(); // Use toLocaleString for full numbers\n};\n\n// Helper function to calculate growth rate (matching TopRepositories.jsx)\nconst calculateGrowthRate = (repo) => {\n    if (repo.stars_month_ago === null || repo.stars_month_ago === undefined || repo.stars_month_ago === 0) return 0;\n    const growth = (repo.stars || 0) - repo.stars_month_ago;\n    const baseStars = repo.stars_month_ago || 1;\n    const rate = (growth / baseStars) * 100;\n    // Handle potential Infinity or NaN if needed, though baseStars || 1 helps\n    return isFinite(rate) ? rate.toFixed(1) : 'N/A';\n};\n\nconst Dashboard = () => {\n    // Initialize stats with 0 or null\n    const [stats, setStats] = useState({ totalRepositories: 0, totalStars: 0, totalContributors: 0 });\n    const [languageData, setLanguageData] = useState([]);\n    const [topReposByLang, setTopReposByLang] = useState({}); // Renamed for clarity\n    const [dashboardTopRepos, setDashboardTopRepos] = useState([]); // State for top growing repos\n    const [hoveredLanguage, setHoveredLanguage] = useState(null);\n    const [loadingStats, setLoadingStats] = useState(true); // Keep loading state for stats\n    const [loadingLanguages, setLoadingLanguages] = useState(true);\n    const [loadingTopRepos, setLoadingTopRepos] = useState(true); // Loading state for top repos section\n    const [error, setError] = useState(null); // Use a single error state or separate if needed\n    const [selectedLanguageIndex, setSelectedLanguageIndex] = useState(-1);\n\n    useEffect(() => {\n        // Fetch data for Stats Overview\n        const fetchStatsData = async () => {\n            setLoadingStats(true);\n            try {\n                const statsResponse = await fetch(API.starsContributors); // Fetch data used for stats\n                if (!statsResponse.ok) {\n                    throw new Error(`Ëé∑ÂèñÁªüËÆ°Êï∞ÊçÆÂ§±Ë¥•: ${statsResponse.status}`);\n                }\n                const statsResult = await statsResponse.json();\n\n                // Calculate stats from the fetched data\n                const totalRepositories = statsResult.length; // Use length as repo count for dashboard\n                const totalStars = statsResult.reduce((sum, repo) => sum + (repo.stars || 0), 0);\n                const totalContributors = statsResult.reduce((sum, repo) => sum + (repo.contributors_count || 0), 0);\n\n                setStats({ totalRepositories, totalStars, totalContributors });\n\n            } catch (err) {\n                console.error(\"Ëé∑Âèñ‰ª™Ë°®ÁõòÁªüËÆ°Êï∞ÊçÆÂ§±Ë¥•:\", err);\n                setError(prev => prev ? `${prev}\\nÁªüËÆ°Êï∞ÊçÆÂä†ËΩΩÂ§±Ë¥•` : 'ÁªüËÆ°Êï∞ÊçÆÂä†ËΩΩÂ§±Ë¥•'); // Append or set error\n                // Optionally set stats to fallback values or keep them 0\n                setStats({ totalRepositories: 0, totalStars: 0, totalContributors: 0 });\n            } finally {\n                setLoadingStats(false);\n            }\n        };\n\n        // Fetch data for Language Distribution and Top Repos per Language\n        const fetchLanguageData = async () => {\n            setLoadingLanguages(true);\n            try {\n                const langResponse = await fetch(API.languageDistribution);\n                if (!langResponse.ok) {\n                    throw new Error(`Ëé∑ÂèñËØ≠Ë®ÄÊï∞ÊçÆÂ§±Ë¥•: ${langResponse.status}`);\n                }\n                const langResult = await langResponse.json();\n                setLanguageData(langResult);\n\n                // Fetch top repos for top languages (keep this logic)\n                const languageTopRepos = {};\n                const topLanguages = langResult.slice(0, 15); // Fetch for top 15 displayed languages\n                // Use Promise.all for potentially faster fetching if backend/network allows\n                await Promise.all(topLanguages.map(async (lang) => {\n                    try {\n                        const reposResponse = await fetch(`${API.languageTopRepos}?language=${encodeURIComponent(lang.language)}`);\n                        if (reposResponse.ok) {\n                            const reposData = await reposResponse.json();\n                            languageTopRepos[lang.language] = reposData;\n                        } else {\n                            console.warn(`Ëé∑Âèñ ${lang.language} ÁÉ≠Èó®‰ªìÂ∫ìÂ§±Ë¥•: ${reposResponse.status}`);\n                        }\n                    } catch (repoError) {\n                        console.warn(`Ëé∑Âèñ ${lang.language} ÁÉ≠Èó®‰ªìÂ∫ìÂ§±Ë¥•:`, repoError);\n                    }\n                }));\n                setTopReposByLang(languageTopRepos);\n\n            } catch (err) {\n                console.error(\"Ëé∑Âèñ‰ª™Ë°®ÁõòËØ≠Ë®ÄÊï∞ÊçÆÂ§±Ë¥•:\", err);\n                setError(prev => prev ? `${prev}\\nËØ≠Ë®ÄÊï∞ÊçÆÂä†ËΩΩÂ§±Ë¥•` : 'ËØ≠Ë®ÄÊï∞ÊçÆÂä†ËΩΩÂ§±Ë¥•'); // Append or set error\n                setLanguageData([]); // Set to empty on error\n                setTopReposByLang({});\n            } finally {\n                setLoadingLanguages(false);\n            }\n        };\n\n        // Fetch data for Top Growing Repositories\n        const fetchTopGrowingRepos = async () => {\n            setLoadingTopRepos(true);\n            try {\n                const response = await fetch(API.topRepositories); // Fetch all top repos\n                if (!response.ok) {\n                    throw new Error(`Ëé∑ÂèñTop‰ªìÂ∫ìÊï∞ÊçÆÂ§±Ë¥•: ${response.status}`);\n                }\n                let repos = await response.json();\n\n                // Calculate growth rate for each and sort\n                repos.forEach(repo => {\n                    repo.growthRate = parseFloat(calculateGrowthRate(repo)) || 0; // Add growthRate property\n                });\n\n                repos.sort((a, b) => b.growthRate - a.growthRate); // Sort by growth rate descending\n\n                setDashboardTopRepos(repos.slice(0, 10)); // Get top 10\n\n            } catch (err) {\n                console.error(\"Ëé∑Âèñ‰ª™Ë°®ÁõòÁÉ≠Èó®Â¢ûÈïø‰ªìÂ∫ìÂ§±Ë¥•:\", err);\n                setError(prev => prev ? `${prev}\\nÁÉ≠Èó®Â¢ûÈïø‰ªìÂ∫ìÂä†ËΩΩÂ§±Ë¥•` : 'ÁÉ≠Èó®Â¢ûÈïø‰ªìÂ∫ìÂä†ËΩΩÂ§±Ë¥•');\n                setDashboardTopRepos([]); // Set empty on error\n            } finally {\n                setLoadingTopRepos(false);\n            }\n        };\n\n        // Call all fetch functions\n        fetchStatsData();\n        fetchLanguageData();\n        fetchTopGrowingRepos(); // Fetch top growing repos\n\n    }, []); // Empty dependency array ensures this runs once on mount\n\n    const totalCount = languageData.reduce((sum, item) => sum + item.count, 0);\n    const maxCount = Math.max(...languageData.map(item => item.count));\n\n    return (\n        <div className=\"dashboard\">\n            <h1 className=\"page-title\">Êï∞ÊçÆÊ¶ÇËßà</h1>\n\n            {/* Stats Overview - uses stats state which is now dynamic */}\n            <div className=\"stats-overview\">\n                <div className=\"card stat-card\">\n                    <div className=\"stat-value\">{loadingStats ? '...' : stats.totalRepositories.toLocaleString()}</div>\n                    <div className=\"stat-label\">‰ªìÂ∫ìÊÄªÊï∞</div>\n                </div>\n                <div className=\"card stat-card\">\n                    <div className=\"stat-value\">{loadingStats ? '...' : stats.totalStars.toLocaleString()}</div>\n                    <div className=\"stat-label\">ÊÄªÊòüÊ†áÊï∞</div>\n                </div>\n                <div className=\"card stat-card\">\n                    <div className=\"stat-value\">{loadingStats ? '...' : stats.totalContributors.toLocaleString()}</div>\n                    <div className=\"stat-label\">Ë¥°ÁåÆËÄÖÊÄªÊï∞</div>\n                </div>\n            </div>\n\n            {/* Display combined error message if any */}\n            {error && <div className=\"error-message\">ÈîôËØØ: {error}</div>}\n\n            {/* Language Distribution Card - uses languageData state */}\n            <div className=\"dashboard-row\">\n                <div className=\"card language-distribution-card\">\n                    <div className=\"card-header\">\n                        <h2 className=\"card-title\">ÁºñÁ®ãËØ≠Ë®ÄÂàÜÂ∏É</h2>\n                    </div>\n                    <div className=\"card-body\">\n                        {/* Loading/Empty/Data display logic for languages remains the same */}\n                        {loadingLanguages ? (\n                            <div className=\"loading-container\">Ê≠£Âú®Âä†ËΩΩËØ≠Ë®ÄÊï∞ÊçÆ...</div>\n                        ) : !languageData || languageData.length === 0 ? (\n                            <div className=\"empty-data\">Ê≤°ÊúâÊâæÂà∞ËØ≠Ë®ÄÂàÜÂ∏ÉÊï∞ÊçÆ</div>\n                        ) : (\n                            <div className=\"scroll-list-container\">\n                                <div className=\"scroll-list\">\n                                    {languageData.slice(0, 15).map((item, index) => {\n                                        const percentage = totalCount > 0 ? (item.count / totalCount * 100).toFixed(1) : 0;\n                                        const barWidth = maxCount > 0 ? (item.count / maxCount * 100).toFixed(1) + '%' : '0%';\n                                        return (\n                                            <AnimatedLanguageItem\n                                                key={index}\n                                                index={index}\n                                                language={item.language}\n                                                count={item.count}\n                                                percentage={percentage}\n                                                barWidth={barWidth}\n                                                color={getLanguageColor(item.language)}\n                                                isSelected={selectedLanguageIndex === index}\n                                                hoveredLanguage={hoveredLanguage}\n                                                topRepos={topReposByLang}\n                                                onMouseEnter={() => { setHoveredLanguage(item.language); setSelectedLanguageIndex(index); }}\n                                                onMouseLeave={() => setHoveredLanguage(null)}\n                                                onClick={() => { setHoveredLanguage(item.language); setSelectedLanguageIndex(index); }}\n                                            />\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                {/* Top Repositories Card - Now dynamic */}\n                <div className=\"card top-repositories-card\">\n                    <div className=\"card-header\">\n                        <h2 className=\"card-title\">ÁÉ≠Èó®Â¢ûÈïø‰ªìÂ∫ì (Top 10)</h2>\n                    </div>\n                    <div className=\"card-body\">\n                        {loadingTopRepos ? (\n                            <div className=\"loading-container\">Ê≠£Âú®Âä†ËΩΩÁÉ≠Èó®‰ªìÂ∫ì...</div>\n                        ) : !dashboardTopRepos || dashboardTopRepos.length === 0 ? (\n                            <div className=\"empty-data\">Êó†Ê≥ïÂä†ËΩΩÁÉ≠Èó®‰ªìÂ∫ìÊï∞ÊçÆ</div>\n                        ) : (\n                            <div className=\"scroll-list-container\" style={{ maxHeight: '400px', overflowY: 'auto' }}>\n                                <div className=\"repo-list-dynamic\">\n                                    {dashboardTopRepos.map((repo, index) => (\n                                        <div\n                                            key={repo.repo_id || index}\n                                            className=\"repository-card dashboard-repo-card\"\n                                        >\n                                            <div className=\"repository-rank\">{index + 1}</div>\n                                            <div className=\"repository-header\">\n                                                <h3 className=\"repository-name\">\n                                                    <a href={repo.url || '#'} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                        <span className=\"repository-owner\">{repo.owner}/</span>{repo.name}\n                                                    </a>\n                                                </h3>\n                                            </div>\n                                            <div className=\"repository-description\">{repo.description}</div>\n                                            <div className=\"repository-meta\">\n                                                {repo.language && (\n                                                    <div className=\"repository-language\">\n                                                        <span className=\"language-color\" style={{ backgroundColor: getLanguageColor(repo.language) }}></span>\n                                                        <span className=\"language-name\">{repo.language}</span>\n                                                    </div>\n                                                )}\n                                                <div className=\"repository-stats\">\n                                                    <div className=\"repository-stars\">\n                                                        <svg className=\"icon\" viewBox=\"0 0 16 16\" fill=\"currentColor\"><path d=\"M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z\" /></svg>\n                                                        <span title={`${(repo.stars || 0).toLocaleString()} ‰∏™ÊòüÊ†á`}>{formatNumber(repo.stars)}</span>\n                                                    </div>\n                                                    <div className=\"repository-forks\">\n                                                        <svg className=\"icon\" viewBox=\"0 0 16 16\" fill=\"currentColor\"><path d=\"M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z\" /></svg>\n                                                        <span title={`${(repo.forks || 0).toLocaleString()} ‰∏™ÂàÜÂèâ`}>{formatNumber(repo.forks)}</span>\n                                                    </div>\n                                                    {(repo.stars_month_ago !== null && repo.stars_month_ago !== undefined) && (\n                                                        <div\n                                                            className={`repository-growth ${repo.growthRate >= 0 ? 'positive' : 'negative'}`}\n                                                            title={`ËøáÂéª7Â§©ÊòüÊ†áÂ¢ûÈïø ${repo.growthRate}%`}\n                                                        >\n                                                            <svg className=\"icon\" viewBox=\"0 0 16 16\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M8 12a.75.75 0 01-.75-.75V5.66L3.668 9.123a.75.75 0 11-1.036-1.086l5.25-5a.75.75 0 011.071 0l5.25 5a.75.75 0 11-1.036 1.086L8.75 5.66v5.59A.75.75 0 018 12z\" /></svg>\n                                                            <span>{repo.growthRate}%</span>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}