{"ast":null,"code":"var _jsxFileName = \"/home/qiu/code/Github-hotspot/github-viz-app/src/pages/LanguageDistribution.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport API from '../config/api';\n\n// 根据语言名称生成颜色\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLanguageColor = language => {\n  const colorMap = {\n    JavaScript: '#f1e05a',\n    TypeScript: '#2b7489',\n    Python: '#3572A5',\n    Java: '#b07219',\n    Go: '#00ADD8',\n    'C++': '#f34b7d',\n    Ruby: '#701516',\n    PHP: '#4F5D95',\n    Rust: '#dea584',\n    'C#': '#178600',\n    Swift: '#ffac45',\n    Kotlin: '#F18E33',\n    'C': '#555555',\n    // 示例：添加 C 语言\n    'Shell': '#89e051',\n    // 示例：添加 Shell\n    'HTML': '#e34c26',\n    // 示例：添加 HTML\n    'CSS': '#563d7c' // 示例：添加 CSS\n  };\n\n  // 如果预定义了颜色，直接返回\n  if (colorMap[language]) {\n    return colorMap[language];\n  }\n\n  // 备用颜色：基于语言名称生成 HSL 颜色，调整饱和度和亮度\n  // 将饱和度从 70% 调整为 65%，亮度从 60% 调整为 65%\n  const hue = Math.abs(language.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0)) % 360;\n  return `hsl(${hue}, 65%, 65%)`;\n};\nconst LanguageDistribution = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [topRepos, setTopRepos] = useState({});\n  const [hoveredLanguage, setHoveredLanguage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(API.languageDistribution);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n\n        // 为每种语言获取前6个星标最高的仓库\n        const languageTopRepos = {};\n        for (const lang of result.slice(0, 15)) {\n          /* 遍历前10种语言 */\n          const reposResponse = await fetch(`${API.languageTopRepos}?language=${encodeURIComponent(lang.language)}`);\n          if (reposResponse.ok) {\n            const reposData = await reposResponse.json();\n            languageTopRepos[lang.language] = reposData;\n          }\n        }\n        setTopRepos(languageTopRepos);\n      } catch (err) {\n        setError(`获取数据失败: ${err.message}`);\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // 显示加载状态\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u8BED\\u8A00\\u5206\\u5E03\\u6570\\u636E...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 显示错误\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [\"\\u9519\\u8BEF: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 确保数据存在且非空\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-data\",\n      children: \"\\u6CA1\\u6709\\u627E\\u5230\\u8BED\\u8A00\\u5206\\u5E03\\u6570\\u636E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 计算总数和最大值，用于百分比计算\n  const totalCount = data.reduce((sum, item) => sum + item.count, 0);\n  const maxCount = Math.max(...data.map(item => item.count));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-distribution-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u7F16\\u7A0B\\u8BED\\u8A00\\u5206\\u5E03\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"horizontal-bars-container\",\n      children: data.map((item, index) => {\n        const percentage = (item.count / totalCount * 100).toFixed(1); //计算百分比\n        const barWidth = (item.count / maxCount * 100).toFixed(1) + '%'; //计算宽度\n        //const barWidth = (item.count / totalCount * 100).toFixed(1) + '%';\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `language-bar-item ${hoveredLanguage === item.language ? 'hovered' : ''}` //hoveredLanguage 是悬停的语言\n          ,\n          onMouseEnter: () => setHoveredLanguage(item.language) //setHoveredLanguage 是设置悬停的语言\n          ,\n          onMouseLeave: () => setHoveredLanguage(null) //setHoveredLanguage 是设置悬停的语言\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-name\",\n            children: item.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                //style 是css样式\n                width: barWidth,\n                //barWidth 是百分比\n                backgroundColor: getLanguageColor(item.language),\n                //根据语言名称生成颜色\n                //backgroundColor: 'red',\n                //height: '100%',\n                height: '20px',\n                borderRadius: '4px',\n                //borderRadius 是圆角\n                display: 'block',\n                //display 是显示方式\n                opacity: 0.8 //opacity 是透明度\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-count\",\n            children: [item.count.toLocaleString(), \" (\", percentage, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), hoveredLanguage === item.language && topRepos[item.language] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-top-repos\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [item.language, \" \\u70ED\\u95E8\\u4ED3\\u5E93\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: topRepos[item.language].map((repo, i) =>\n              /*#__PURE__*/\n              /* 遍历热门仓库 */\n              _jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"repo-name\",\n                  children: repo.repo_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"repo-stats\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\u2B50 \", repo.stars.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"\\uD83D\\uDD31 \", repo.forks.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 49\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageDistribution, \"xxxpiconQZr1t+PykKqlf4JWCKs=\");\n_c = LanguageDistribution;\nexport default LanguageDistribution;\nvar _c;\n$RefreshReg$(_c, \"LanguageDistribution\");","map":{"version":3,"names":["React","useState","useEffect","API","jsxDEV","_jsxDEV","getLanguageColor","language","colorMap","JavaScript","TypeScript","Python","Java","Go","Ruby","PHP","Rust","Swift","Kotlin","hue","Math","abs","split","reduce","acc","char","charCodeAt","LanguageDistribution","_s","data","setData","topRepos","setTopRepos","hoveredLanguage","setHoveredLanguage","loading","setLoading","error","setError","fetchData","response","fetch","languageDistribution","ok","Error","status","result","json","languageTopRepos","lang","slice","reposResponse","encodeURIComponent","reposData","err","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","totalCount","sum","item","count","maxCount","max","map","index","percentage","toFixed","barWidth","onMouseEnter","onMouseLeave","style","width","backgroundColor","height","borderRadius","display","opacity","toLocaleString","repo","i","repo_name","stars","forks","_c","$RefreshReg$"],"sources":["/home/qiu/code/Github-hotspot/github-viz-app/src/pages/LanguageDistribution.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../config/api';\n\n// 根据语言名称生成颜色\nconst getLanguageColor = (language) => {\n    const colorMap = {\n        JavaScript: '#f1e05a',\n        TypeScript: '#2b7489',\n        Python: '#3572A5',\n        Java: '#b07219',\n        Go: '#00ADD8',\n        'C++': '#f34b7d',\n        Ruby: '#701516',\n        PHP: '#4F5D95',\n        Rust: '#dea584',\n        'C#': '#178600',\n        Swift: '#ffac45',\n        Kotlin: '#F18E33',\n        'C': '#555555',         // 示例：添加 C 语言\n        'Shell': '#89e051',     // 示例：添加 Shell\n        'HTML': '#e34c26',      // 示例：添加 HTML\n        'CSS': '#563d7c',       // 示例：添加 CSS\n    };\n\n    // 如果预定义了颜色，直接返回\n    if (colorMap[language]) {\n        return colorMap[language];\n    }\n\n    // 备用颜色：基于语言名称生成 HSL 颜色，调整饱和度和亮度\n    // 将饱和度从 70% 调整为 65%，亮度从 60% 调整为 65%\n    const hue = Math.abs(language.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0)) % 360;\n    return `hsl(${hue}, 65%, 65%)`;\n};\n\nconst LanguageDistribution = () => {\n    const [data, setData] = useState([]);\n    const [topRepos, setTopRepos] = useState({});\n    const [hoveredLanguage, setHoveredLanguage] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                const response = await fetch(API.languageDistribution);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                const result = await response.json();\n                setData(result);\n\n                // 为每种语言获取前6个星标最高的仓库\n                const languageTopRepos = {};\n                for (const lang of result.slice(0, 15)) {/* 遍历前10种语言 */\n                    const reposResponse = await fetch(`${API.languageTopRepos}?language=${encodeURIComponent(lang.language)}`);\n                    if (reposResponse.ok) {\n                        const reposData = await reposResponse.json();\n                        languageTopRepos[lang.language] = reposData;\n                    }\n                }\n                setTopRepos(languageTopRepos);\n            } catch (err) {\n                setError(`获取数据失败: ${err.message}`);\n                console.error(err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    // 显示加载状态\n    if (loading) {\n        return <div className=\"loading-container\">\n            正在加载语言分布数据...</div>;\n    }\n\n    // 显示错误\n    if (error) {\n        return <div className=\"error-container\">错误: {error}</div>;\n    }\n\n    // 确保数据存在且非空\n    if (!data || data.length === 0) {\n        return <div className=\"empty-data\">没有找到语言分布数据</div>;\n    }\n\n    // 计算总数和最大值，用于百分比计算\n    const totalCount = data.reduce((sum, item) => sum + item.count, 0);\n    const maxCount = Math.max(...data.map(item => item.count));\n\n    return (\n        <div className=\"language-distribution-container\">\n            <h2>编程语言分布</h2>\n            <div className=\"horizontal-bars-container\">\n                {data.map((item, index) => {\n                    const percentage = (item.count / totalCount * 100).toFixed(1);//计算百分比\n                    const barWidth = (item.count / maxCount * 100).toFixed(1) + '%';//计算宽度\n                    //const barWidth = (item.count / totalCount * 100).toFixed(1) + '%';\n\n                    return (\n                        <div\n                            key={index}\n                            className={`language-bar-item ${hoveredLanguage === item.language ? 'hovered' : ''}`}//hoveredLanguage 是悬停的语言\n                            onMouseEnter={() => setHoveredLanguage(item.language)}//setHoveredLanguage 是设置悬停的语言\n                            onMouseLeave={() => setHoveredLanguage(null)}//setHoveredLanguage 是设置悬停的语言\n                        >\n                            <div className=\"language-name\">{item.language}</div>\n                            <div className=\"bar-container\">\n                                <div\n                                    style={{//style 是css样式\n                                        width: barWidth,//barWidth 是百分比\n                                        backgroundColor: getLanguageColor(item.language),//根据语言名称生成颜色\n                                        //backgroundColor: 'red',\n                                        //height: '100%',\n                                        height: '20px',\n                                        borderRadius: '4px',//borderRadius 是圆角\n                                        display: 'block',//display 是显示方式\n                                        opacity: 0.8//opacity 是透明度\n                                    }}\n                                />\n                            </div>\n                            <div className=\"language-count\">\n                                {item.count.toLocaleString()} ({percentage}%)\n                            </div>\n\n                            {/* 悬停时显示该语言的热门仓库 */}\n                            {hoveredLanguage === item.language && topRepos[item.language] && (\n                                <div className=\"language-top-repos\">\n                                    <h4>{item.language} 热门仓库</h4>\n                                    <ul>\n                                        {topRepos[item.language].map((repo, i) => ( /* 遍历热门仓库 */\n                                            <li key={i}>{/* 每个热门仓库的唯一标识 */}\n                                                <div className=\"repo-name\">{repo.repo_name}</div>\n                                                <div className=\"repo-stats\">\n                                                    <span>⭐ {repo.stars.toLocaleString()}</span>\n                                                    <span>🔱 {repo.forks.toLocaleString()}</span>\n                                                </div>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            )}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default LanguageDistribution; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}