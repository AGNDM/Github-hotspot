{"ast":null,"code":"var _jsxFileName = \"/home/qiu/code/Github-hotspot/github-viz-app/src/pages/LanguageTrends.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport API from '../config/api';\n\n// 根据语言名称生成颜色\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLanguageColor = language => {\n  const colorMap = {\n    JavaScript: '#f1e05a',\n    TypeScript: '#2b7489',\n    Python: '#3572A5',\n    Java: '#b07219',\n    Go: '#00ADD8',\n    'C++': '#f34b7d',\n    Ruby: '#701516',\n    PHP: '#4F5D95',\n    Rust: '#dea584',\n    'C#': '#178600',\n    Swift: '#ffac45',\n    Kotlin: '#F18E33'\n  };\n  return colorMap[language] || '#999';\n};\nconst LanguageTrends = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setLoading(true);\n        const response = await fetch(API.languageTrends);\n        if (!response.ok) throw new Error('获取数据失败');\n        const result = await response.json();\n        setData(result);\n        // 默认选择所有语言，最多5种\n        if (Array.isArray(result) && result.length > 0) {\n          setSelectedLanguages(result.slice(0, 5).map(lang => lang.name));\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('获取编程语言趋势出错:', err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-indicator\",\n    children: \"\\u6570\\u636E\\u52A0\\u8F7D\\u4E2D...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: [\"\\u52A0\\u8F7D\\u51FA\\u9519: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 21\n  }, this);\n  if (!Array.isArray(data) || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"\\u6CA1\\u6709\\u627E\\u5230\\u8D8B\\u52BF\\u6570\\u636E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 切换语言选择\n  const toggleLanguage = language => {\n    if (selectedLanguages.includes(language)) {\n      // 至少保留一种语言\n      if (selectedLanguages.length > 1) {\n        setSelectedLanguages(selectedLanguages.filter(lang => lang !== language));\n      }\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n\n  // 提取年份/日期\n  const getAllDates = () => {\n    const allDates = new Set();\n    data.forEach(lang => {\n      if (lang.data && Array.isArray(lang.data)) {\n        lang.data.forEach(item => {\n          if (item.date) {\n            allDates.add(item.date);\n          }\n        });\n      }\n    });\n    return Array.from(allDates).sort();\n  };\n  const years = getAllDates();\n\n  // 获取最大值，用于计算图表的高度比例\n  const getMaxValue = () => {\n    let max = 0;\n    data.forEach(lang => {\n      if (selectedLanguages.includes(lang.name) && Array.isArray(lang.data)) {\n        lang.data.forEach(item => {\n          if (item.count > max) max = item.count;\n        });\n      }\n    });\n    return max || 1000; // 默认最大值\n  };\n  const maxValue = getMaxValue();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-trends-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"\\u7F16\\u7A0B\\u8BED\\u8A00\\u8D8B\\u52BF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"\\u8BED\\u8A00\\u9009\\u62E9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-toggles\",\n          children: data.map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `language-toggle ${selectedLanguages.includes(lang.name) ? 'active' : ''}`,\n            onClick: () => toggleLanguage(lang.name),\n            style: {\n              borderColor: getLanguageColor(lang.name),\n              backgroundColor: selectedLanguages.includes(lang.name) ? getLanguageColor(lang.name) : 'transparent',\n              color: selectedLanguages.includes(lang.name) ? '#fff' : 'inherit'\n            },\n            children: lang.name\n          }, lang.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"\\u4ED3\\u5E93\\u6570\\u91CF\\u8D8B\\u52BF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trend-chart-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mock-trend-chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-y-axis\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"axis-label\",\n                children: maxValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"axis-label\",\n                children: Math.round(maxValue * 0.75)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"axis-label\",\n                children: Math.round(maxValue * 0.5)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"axis-label\",\n                children: Math.round(maxValue * 0.25)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"axis-label\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-grid\",\n                children: [0.25, 0.5, 0.75, 1].map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid-line\",\n                  style: {\n                    bottom: `${level * 100}%`\n                  }\n                }, level, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), data.map(lang => {\n                if (!selectedLanguages.includes(lang.name) || !Array.isArray(lang.data) || lang.data.length === 0) return null;\n                const points = lang.data.map((item, index) => {\n                  const x = `${index / (lang.data.length - 1) * 100}%`;\n                  const y = `${100 - item.count / maxValue * 100}%`;\n                  return `${x},${y}`;\n                }).join(' ');\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chart-line\",\n                  style: {\n                    color: getLanguageColor(lang.name)\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"100%\",\n                    height: \"100%\",\n                    viewBox: \"0 0 100 100\",\n                    preserveAspectRatio: \"none\",\n                    children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: points,\n                      strokeWidth: \"2\",\n                      stroke: getLanguageColor(lang.name),\n                      fill: \"none\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this), lang.data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-point\",\n                    style: {\n                      left: `${index / (lang.data.length - 1) * 100}%`,\n                      bottom: `${item.count / maxValue * 100}%`,\n                      backgroundColor: getLanguageColor(lang.name)\n                    },\n                    title: `${lang.name} (${item.date}): ${item.count} 个仓库`\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 25\n                  }, this))]\n                }, lang.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-x-axis\",\n              children: years.length <= 10 ? years.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"axis-label\",\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)) : years.filter((_, index) => index % Math.ceil(years.length / 10) === 0).map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"axis-label\",\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"\\u8D8B\\u52BF\\u6570\\u636E\\u8868\\u683C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trend-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u8BED\\u8A00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), years.length <= 10 ? years.map(year => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: year\n                }, year, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this)) : years.filter((_, index) => index % Math.ceil(years.length / 10) === 0).map(year => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: year\n                }, year, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u53D8\\u5316\\u8D8B\\u52BF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map(lang => {\n                var _lang$data$, _lang$data;\n                if (!selectedLanguages.includes(lang.name) || !Array.isArray(lang.data) || lang.data.length === 0) return null;\n\n                // 计算增长率\n                const firstYear = ((_lang$data$ = lang.data[0]) === null || _lang$data$ === void 0 ? void 0 : _lang$data$.count) || 0;\n                const lastYear = ((_lang$data = lang.data[lang.data.length - 1]) === null || _lang$data === void 0 ? void 0 : _lang$data.count) || 0;\n                const growthRate = firstYear > 0 ? ((lastYear - firstYear) / firstYear * 100).toFixed(1) : 0;\n                const isGrowing = lastYear > firstYear;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"language-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"language-indicator\",\n                      style: {\n                        backgroundColor: getLanguageColor(lang.name)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 25\n                    }, this), lang.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this), (years.length <= 10 ? years : years.filter((_, index) => index % Math.ceil(years.length / 10) === 0)).map(year => {\n                    const dataItem = lang.data.find(d => d.date === year);\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: (dataItem === null || dataItem === void 0 ? void 0 : dataItem.count) || 0\n                    }, year, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 32\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `growth-cell ${isGrowing ? 'positive' : 'negative'}`,\n                    children: [isGrowing ? '+' : '', growthRate, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this)]\n                }, lang.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageTrends, \"fM9JCEqD33uVK8f3SJT/OhFBGcg=\");\n_c = LanguageTrends;\nexport default LanguageTrends;\nvar _c;\n$RefreshReg$(_c, \"LanguageTrends\");","map":{"version":3,"names":["useState","useEffect","API","jsxDEV","_jsxDEV","getLanguageColor","language","colorMap","JavaScript","TypeScript","Python","Java","Go","Ruby","PHP","Rust","Swift","Kotlin","LanguageTrends","_s","data","setData","loading","setLoading","error","setError","selectedLanguages","setSelectedLanguages","fetchData","response","fetch","languageTrends","ok","Error","result","json","Array","isArray","length","slice","map","lang","name","err","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleLanguage","includes","filter","getAllDates","allDates","Set","forEach","item","date","add","from","sort","years","getMaxValue","max","count","maxValue","onClick","style","borderColor","backgroundColor","color","Math","round","level","bottom","points","index","x","y","join","width","height","viewBox","preserveAspectRatio","strokeWidth","stroke","fill","left","title","year","_","ceil","_lang$data$","_lang$data","firstYear","lastYear","growthRate","toFixed","isGrowing","dataItem","find","d","_c","$RefreshReg$"],"sources":["/home/qiu/code/Github-hotspot/github-viz-app/src/pages/LanguageTrends.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport API from '../config/api';\n\n// 根据语言名称生成颜色\nconst getLanguageColor = (language) => {\n  const colorMap = {\n    JavaScript: '#f1e05a',\n    TypeScript: '#2b7489',\n    Python: '#3572A5',\n    Java: '#b07219',\n    Go: '#00ADD8',\n    'C++': '#f34b7d',\n    Ruby: '#701516',\n    PHP: '#4F5D95',\n    Rust: '#dea584',\n    'C#': '#178600',\n    Swift: '#ffac45',\n    Kotlin: '#F18E33'\n  };\n\n  return colorMap[language] || '#999';\n};\n\nconst LanguageTrends = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setLoading(true);\n        const response = await fetch(API.languageTrends);\n        if (!response.ok) throw new Error('获取数据失败');\n        const result = await response.json();\n        setData(result);\n        // 默认选择所有语言，最多5种\n        if (Array.isArray(result) && result.length > 0) {\n          setSelectedLanguages(result.slice(0, 5).map(lang => lang.name));\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('获取编程语言趋势出错:', err);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  if (loading) return <div className=\"loading-indicator\">数据加载中...</div>;\n  if (error) return <div className=\"error-message\">加载出错: {error}</div>;\n  if (!Array.isArray(data) || data.length === 0) {\n    return <div className=\"error-message\">没有找到趋势数据</div>;\n  }\n\n  // 切换语言选择\n  const toggleLanguage = (language) => {\n    if (selectedLanguages.includes(language)) {\n      // 至少保留一种语言\n      if (selectedLanguages.length > 1) {\n        setSelectedLanguages(selectedLanguages.filter(lang => lang !== language));\n      }\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n\n  // 提取年份/日期\n  const getAllDates = () => {\n    const allDates = new Set();\n    data.forEach(lang => {\n      if (lang.data && Array.isArray(lang.data)) {\n        lang.data.forEach(item => {\n          if (item.date) {\n            allDates.add(item.date);\n          }\n        });\n      }\n    });\n    return Array.from(allDates).sort();\n  };\n\n  const years = getAllDates();\n\n  // 获取最大值，用于计算图表的高度比例\n  const getMaxValue = () => {\n    let max = 0;\n    data.forEach(lang => {\n      if (selectedLanguages.includes(lang.name) && Array.isArray(lang.data)) {\n        lang.data.forEach(item => {\n          if (item.count > max) max = item.count;\n        });\n      }\n    });\n    return max || 1000; // 默认最大值\n  };\n\n  const maxValue = getMaxValue();\n\n  return (\n    <div className=\"language-trends-page\">\n      <h1 className=\"page-title\">编程语言趋势</h1>\n\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">语言选择</h2>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"language-toggles\">\n            {data.map(lang => (\n              <button\n                key={lang.name}\n                className={`language-toggle ${selectedLanguages.includes(lang.name) ? 'active' : ''}`}\n                onClick={() => toggleLanguage(lang.name)}\n                style={{\n                  borderColor: getLanguageColor(lang.name),\n                  backgroundColor: selectedLanguages.includes(lang.name)\n                    ? getLanguageColor(lang.name)\n                    : 'transparent',\n                  color: selectedLanguages.includes(lang.name) ? '#fff' : 'inherit'\n                }}\n              >\n                {lang.name}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">仓库数量趋势</h2>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"trend-chart-container\">\n            {/* 在实际项目中使用Recharts等图表库 */}\n            <div className=\"mock-trend-chart\">\n              <div className=\"chart-y-axis\">\n                <div className=\"axis-label\">{maxValue}</div>\n                <div className=\"axis-label\">{Math.round(maxValue * 0.75)}</div>\n                <div className=\"axis-label\">{Math.round(maxValue * 0.5)}</div>\n                <div className=\"axis-label\">{Math.round(maxValue * 0.25)}</div>\n                <div className=\"axis-label\">0</div>\n              </div>\n\n              <div className=\"chart-content\">\n                <div className=\"chart-grid\">\n                  {[0.25, 0.5, 0.75, 1].map((level) => (\n                    <div key={level} className=\"grid-line\" style={{ bottom: `${level * 100}%` }} />\n                  ))}\n                </div>\n\n                {data.map(lang => {\n                  if (!selectedLanguages.includes(lang.name) || !Array.isArray(lang.data) || lang.data.length === 0) return null;\n\n                  const points = lang.data.map((item, index) => {\n                    const x = `${(index / (lang.data.length - 1)) * 100}%`;\n                    const y = `${100 - (item.count / maxValue) * 100}%`;\n                    return `${x},${y}`;\n                  }).join(' ');\n\n                  return (\n                    <div\n                      key={lang.name}\n                      className=\"chart-line\"\n                      style={{ color: getLanguageColor(lang.name) }}\n                    >\n                      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n                        <polyline\n                          points={points}\n                          strokeWidth=\"2\"\n                          stroke={getLanguageColor(lang.name)}\n                          fill=\"none\"\n                        />\n                      </svg>\n\n                      {lang.data.map((item, index) => (\n                        <div\n                          key={index}\n                          className=\"data-point\"\n                          style={{\n                            left: `${(index / (lang.data.length - 1)) * 100}%`,\n                            bottom: `${(item.count / maxValue) * 100}%`,\n                            backgroundColor: getLanguageColor(lang.name)\n                          }}\n                          title={`${lang.name} (${item.date}): ${item.count} 个仓库`}\n                        />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n\n              <div className=\"chart-x-axis\">\n                {years.length <= 10 ? \n                  years.map(year => (\n                    <div key={year} className=\"axis-label\">{year}</div>\n                  )) : \n                  years.filter((_, index) => index % Math.ceil(years.length / 10) === 0).map(year => (\n                    <div key={year} className=\"axis-label\">{year}</div>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">趋势数据表格</h2>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"trend-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>语言</th>\n                  {years.length <= 10 ? \n                    years.map(year => (\n                      <th key={year}>{year}</th>\n                    )) : \n                    years.filter((_, index) => index % Math.ceil(years.length / 10) === 0).map(year => (\n                      <th key={year}>{year}</th>\n                    ))\n                  }\n                  <th>变化趋势</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(lang => {\n                  if (!selectedLanguages.includes(lang.name) || !Array.isArray(lang.data) || lang.data.length === 0) return null;\n\n                  // 计算增长率\n                  const firstYear = lang.data[0]?.count || 0;\n                  const lastYear = lang.data[lang.data.length - 1]?.count || 0;\n                  const growthRate = firstYear > 0 ? ((lastYear - firstYear) / firstYear * 100).toFixed(1) : 0;\n                  const isGrowing = lastYear > firstYear;\n\n                  return (\n                    <tr key={lang.name}>\n                      <td className=\"language-cell\">\n                        <span\n                          className=\"language-indicator\"\n                          style={{ backgroundColor: getLanguageColor(lang.name) }}\n                        ></span>\n                        {lang.name}\n                      </td>\n                      {(years.length <= 10 ? years : years.filter((_, index) => index % Math.ceil(years.length / 10) === 0)).map(year => {\n                        const dataItem = lang.data.find(d => d.date === year);\n                        return <td key={year}>{dataItem?.count || 0}</td>;\n                      })}\n                      <td className={`growth-cell ${isGrowing ? 'positive' : 'negative'}`}>\n                        {isGrowing ? '+' : ''}{growthRate}%\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LanguageTrends; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}